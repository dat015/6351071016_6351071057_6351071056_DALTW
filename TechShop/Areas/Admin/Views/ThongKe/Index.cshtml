@{
    Layout = "_LayoutAdmin";
}
<style>
    .hide {
        display: none !important;
    }
    .main-order {
        display: grid;
        gap: 10px; /* Khoảng cách giữa các phần tử trong grid */
    }
    .header-order ul {
        display: flex;
        gap: 20px; /* Khoảng cách giữa các mục trong danh sách */
        list-style: none; /* Bỏ bullet của danh sách */
        padding: 0; /* Xóa padding mặc định */
        margin: 0; /* Xóa margin mặc định */
        padding-left: 27px;
    }
    .header-order ul li a {
        text-decoration: none; /* Bỏ gạch chân */
        color: #333; /* Màu chữ */
        font-size: 20px;
    }
    .header-order ul li a:hover {
        color: #007bff; /* Màu chữ khi hover */
    }
    .header-order hr {
        border: none;
        border-top: 1px solid #ddd; /* Đường gạch ngang mỏng */
        margin-top: 10px;
    }
    .header-order ul li {
        cursor: pointer;
        padding: 5px 10px;
        border-bottom: 2px solid transparent; /* Mặc định viền dưới trong suốt */
        color: #333; /* Màu chữ mặc định */
        transition: all 0.3s ease; /* Thêm hiệu ứng chuyển đổi */
    }
    .header-order ul li.active {
        border-bottom: 2px solid #007bff;
    }
</style>
<div class="container-fluid" style="padding-bottom: 30px; padding-top: 20px;">
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModalCenter">
        <i class="bi bi-arrow-down-circle"></i> Xuất báo cáo
    </button>
    @{
        var successMessage = TempData["SuccessMessage"] as string;
    }
    @if (!string.IsNullOrEmpty(successMessage))
    {
        <div class="alert alert-success">
            @successMessage
        </div>
    }
    @if (ViewData["Error"] != null)
    {
        <div class="alert alert-success">
            @ViewData["Error"]
        </div>
    }
    <div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">Báo cáo</h5>
                    <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form action="@Url.Action("ExportRevenueToPDF", "ThongKe")" method="get">
                        <!-- Từ ngày -->
                        <div class="mb-3">
                            <label for="fromDate" class="form-label">Từ ngày:</label>
                            <input type="date" class="form-control" id="fromDate" name="fromDate" required>
                        </div>
                        <!-- Đến ngày -->
                        <div class="mb-3">
                            <label for="toDate" class="form-label">Đến ngày:</label>
                            <input type="date" class="form-control" id="toDate" name="toDate" required>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                            <button type="submit" class="btn btn-primary">Xuất báo cáo</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="main-order">
    <div class="header-order">
        <ul id="order-tabs">
            <li class="active" data-type="revenue">Thống kê doanh thu</li>
            <li data-type="best-selling">Sản phẩm bán chạy</li>
            <li data-type="top-rated">Sản phẩm đánh giá tốt</li>
        </ul>
        <hr />
    </div>
    <div id="order-content">
        <!-- Nội dung PartialView sẽ được load vào đây -->
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
        $(document).ready(function () {
        // Hàm chuyển tab và tải nội dung
        function switchTab(tabElement) {
            // Xóa class 'active' khỏi tất cả các tab
            $('#order-tabs li').removeClass('active');

            // Thêm class 'active' vào tab được chọn
            $(tabElement).addClass('active');

            // Lấy loại thống kê từ thuộc tính data-type
            const type = $(tabElement).data('type');

            // Tải nội dung tương ứng
            loadContent(type);
        }

        // Hàm AJAX để tải nội dung từ server
        function loadContent(type) {
            $.ajax({
                url: `/Admin/ThongKe/LoadPartial?type=${type}`, // Thay URL phù hợp với controller
                method: 'GET',
                beforeSend: function () {
                    // Hiển thị thông báo đang tải (loading)
                    $("#order-content").html('<p>Đang tải dữ liệu...</p>');
                },
                success: function (response) {
                    // Hiển thị nội dung trả về
                    $("#order-content").html(response);
                },
                error: function () {
                    // Hiển thị lỗi nếu có vấn đề xảy ra
                    $("#order-content").html('<p>Lỗi khi tải dữ liệu.</p>');
                }
            });
        }

        // Mặc định hiển thị nội dung "Thống kê doanh thu"
        const defaultTab = $('#order-tabs li.active').first();
        if (defaultTab.length > 0) {
            const defaultType = defaultTab.data('type');
            loadContent(defaultType);
        }

        // Bắt sự kiện click vào tab
        $('#order-tabs li').on('click', function () {
            switchTab(this);
        });
    });

</script>
@* <script>
    // Định nghĩa hàm loadPartial
    function loadPartial(url, element) {
        $.ajax({
            url: url,
            type: 'GET',
            dataType: 'json',
            success: function (response) {
                console.log(response);

                const values = response.values?.$values || response.values || [];
                console.log(values);

                if (!Array.isArray(values) || values.length === 0) {
                    console.error('Dữ liệu không hợp lệ hoặc rỗng');
                    return;
                }

                let labels, data;

                if (url.includes('Statistic_TheoVung')) {
                    labels = values.map(item => item.date);
                    data = values.map(item => item.totalAmount);
                } else if (url.includes('BestSellingProducts')) {
                    labels = values.map(item => item.productName);
                    data = values.map(item => item.totalSold);
                } else if (url.includes('TopRatedProducts')) {
                    labels = values.map(item => item.productName);
                    data = values.map(item => item.rating);
                }

                updateChart(labels, data);

                // Thêm lớp active vào phần tử được nhấn
                $('#order-tabs li').removeClass('active');
                $(element).parent().addClass('active');
            },
            error: function (xhr, status, error) {
                console.error('Lỗi khi lấy dữ liệu:', error);
            }
        });
    }

    // Định nghĩa hàm updateChart
    function updateChart(labels, data) {
        const myChartElement = document.getElementById('myChart').getContext('2d');
        if (window.myChart) {
            window.myChart.destroy();
        }
        window.myChart = new Chart(myChartElement, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Dữ liệu thống kê',
                    data: data,
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.6)',
                        'rgba(54, 162, 235, 0.6)',
                        'rgba(255, 206, 86, 0.6)',
                        'rgba(75, 192, 192, 0.6)',
                        'rgba(153, 102, 255, 0.6)',
                        'rgba(255, 159, 64, 0.6)',
                        'rgba(255, 99, 132, 0.6)',
                        'rgba(54, 162, 235, 0.6)',
                        'rgba(255, 206, 86, 0.6)',
                        'rgba(75, 192, 192, 0.6)',
                        'rgba(153, 102, 255, 0.6)',
                        'rgba(255, 159, 64, 0.6)'
                    ],
                    borderWidth: 1,
                    borderColor: '#777',
                    hoverBorderWidth: 3,
                    hoverBorderColor: '#000'
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                title: {
                    display: true,
                    text: 'Dữ liệu thống kê',
                    fontSize: 25
                },
                legend: {
                    display: true,
                    position: 'right',
                    labels: {
                        fontColor: '#000'
                    }
                },
                layout: {
                    padding: {
                        left: 50,
                        right: 0,
                        bottom: 0,
                        top: 0
                    }
                },
                tooltips: {
                    enabled: true
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            stepSize: 1000000
                        }
                    }
                }
            }
        });
    }

    $(document).ready(function () {
        // Load initial data for revenue
        loadPartial('/Admin/ThongKe/Statistic_TheoVung', $('#order-tabs li.active')[0]);

        // Sự kiện click để tải dữ liệu tương ứng với tab
        $('#order-tabs li').click(function (e) {
            e.preventDefault();
            const type = $(this).data('type');
            const url = `/Admin/ThongKe/${type}`;
            loadPartial(url, this);
        });
    });
</script> *@