@model TechShop.ViewModel.CartVM

@{
    Layout = "_Layout";

}
<style>
    .col-lg-8 {
        width: 100% !important;
    }

    .sumary_style {
        padding-top: 0px !important;
        width: 100%;
    }

    .info_order {
        padding-top: 18px;
        width: 60%;
    }

    #formUpdateQuantity {
        width: 41%;
    }

    .upload_quantity {
        display: flex;
    }

    .border {
        padding: 0px 10px;
        padding-top: 8px;
    }

        .border:hover {
            background-color: #f8f8f8;
        }

    .change {
        display: inline-block;
        padding: 10px;
        font-size: 15px;
        text-decoration: none;
        color: #000;
        margin: 0 5px;
        cursor: pointer;
    }
</style>
<div class="container">
    <section class="h-100 h-custom">
        <div class="container py-5 h-100">
            <div class="row d-flex justify-content-center align-items-center h-100">
                <div class="col-12">
                    <div class="card card-registration card-registration-2" style="border : none;">
                        <div class="card-body p-0">
                            <div class="row g-0">
                                <div class="col-lg-8">
                                    <div class="p-5">
                                        <div class="d-flex justify-content-between align-items-center mb-5">
                                            <h1 class="fw-bold mb-0">Shopping Cart</h1>
                                            <h6 class="mb-0 text-muted">@Model.ListCart.Count() Items</h6>
                                        </div>
                                        <!-- SẢN PHẨM-->

                                        <hr class="my-4">
                                        @if (Model.ListCart != null && Model.ListCart.Any())
                                        {
                                            @foreach (var cartItem in Model.ListCart)
                                            {
                                                <div class="row mb-4 d-flex justify-content-between align-items-center" id="item-@cartItem.specId">
                                                    <div class="col-md-2 col-lg-2 col-xl-2">
                                                        <img src="@cartItem.Specs?.Product?.Img" class="img-fluid rounded-3">
                                                    </div>
                                                    <div class="col-md-3 col-lg-3 col-xl-3">
                                                        <h6 class="mb-0">@cartItem.Specs?.Product?.ProductName </h6>
                                                    </div>
                                                    <div class="col-md-3 col-lg-3 col-xl-2 d-flex">
                                                        <a href="javascript:void(0)" class="change" onclick="changeQuantity(-1, @cartItem.specId)">-</a>
                                                        <a id="quantityDisplay-@cartItem.specId" class="border">@cartItem.quantity</a>
                                                        <a href="javascript:void(0)" class="change" onclick="changeQuantity(1, @cartItem.specId)">+</a>
                                                    </div>
                                                    <div class="col-md-3 col-lg-2 col-xl-2 offset-lg-1">
                                                        <h6 class="mb-0" id="totalPriceBase-@cartItem.specId">
                                                            @(cartItem.price.ToString("#,##0.##") ?? "0") (đ)
                                                        </h6>
                                                    </div>
                                                    <div class="col-md-1 col-lg-1 col-xl-1 text-end">
                                                        <button type="button" class="btn btn-danger btn-sm mt-3 confirmDeletion"
                                                                onclick="deleteCartItem(@cartItem.specId, @cartItem.CartId)">
                                                            <i class="bi bi-trash"></i>
                                                        </button>
                                                    </div>
                                                    <hr />
                                                </div>


                                            }
                                        }
                                        else
                                        {
                                            <p class="text-center">Giỏ hàng của bạn hiện đang trống.</p>
                                        }


                                        <!--KẾT THÚC SHOW SẢN PHẨM-->





                                    </div>
                                    @if (Model != null && Model.ListCart != null && Model.ListCart.Count() > 0)
                                    {
                                        <form asp-action="Index" asp-controller="Order" asp-area="Customer" asp-route-cartId="@Model.cart?.Id" method="get" style="text-align: center;">
                                            <input type="hidden" name="cartId" value="@Model.cart?.Id" />
                                            <button type="submit" class="btn btn-danger btn-block btn-lg" style="padding: 0.5rem 7rem; padding-left: 137px;">
                                                Đặt Hàng
                                            </button>
                                        </form>
                                    }



                                </div>

                            </div>


                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

</div>



<script>

    document.addEventListener('DOMContentLoaded', function () {

        var districtSelect = document.getElementById("districtSelect");
        var proviceSelect = document.getElementById("proviceSelect");
        var wardSelect = document.getElementById("wardSelect");



        proviceSelect.addEventListener('change', function () {
            console.log("Provice select changed"); // Kiểm tra xem sự kiện có được kích hoạt không
            var provinceId = this.value;

            if (provinceId) {
                console.log(provinceId);
                $.ajax({
                    url: '@Url.Action("GetDistrictsByProvice", "Cart", new { Area = "Customer" })',
                    type: "GET",
                    data: { provinceId: provinceId },
                    success: function (data) {
                        console.log("Ajax request succeeded");
                        districtSelect.innerHTML = "<option selected>Quận/Huyện</option>";
                        $.each(data, function (i, district) {
                            var option = document.createElement('option');

                            option.text = district.name;
                            option.value = district.code;


                            option.setAttribute('name', 'districtName');
                            districtSelect.append(option);
                        });
                        districtSelect.disabled = false;
                    },
                    error: function (xhr, status, error) {
                        console.error("Ajax request failed: ", status, error); // Xử lý lỗi
                    }
                });
                wardSelect.disabled = true;

            }
        });

        districtSelect.addEventListener('change', function () {
            var districtId = this.value;
            console.log(districtId);
            if (districtId) {
                $.ajax({
                    url: '@Url.Action("GetWardsByDistrict", "Cart", new { Area = "Customer" })',
                    type: 'GET',
                    data: { districtId: districtId },
                    success: function (data) {
                        wardSelect.innerHTML = '<option selected>Phường/Xã</option>';
                        $.each(data, function (i, ward) {
                            var option = document.createElement('option');
                            option.text = ward.name;
                            option.value = ward.code;
                            option.setAttribute('name', 'wardName');
                            wardSelect.append(option);
                        });
                        wardSelect.disabled = false;
                    }
                });
            } else {
                wardSelect.disabled = true;
            }
        });
    });



    function deleteCartItem(specId, cartId) {
        // Hiển thị xác nhận trước khi xóa
        if (confirm("Bạn có chắc chắn muốn xóa sản phẩm này không?")) {
            $.ajax({
                url: '/Customer/Cart/DeleteItem', // Đường dẫn tới action
                type: 'POST',
                data: { id: specId, cartId: cartId }, // Truyền specId và cartId
                success: function (response) {
                    if (response.success) {
                        alert("Xóa thành công!");
                        // Xóa hàng chứa sản phẩm khỏi giao diện
                        $('#item-' + specId).remove(); // Giả sử bạn có id 'item-<specId>' cho từng sản phẩm
                    } else {
                        alert("Không thể xóa sản phẩm.");
                    }
                },
                error: function () {
                    alert("Đã có lỗi xảy ra. Vui lòng thử lại.");
                }
            });
        }
    }


</script>
<script>
    function changeQuantity(change, idSpec) {
        const quantityDisplay = document.getElementById(`quantityDisplay-${idSpec}`);
        let currentValue = parseInt(quantityDisplay.textContent);

        // Cập nhật giá trị mới
        let newValue = currentValue + change;
        if (newValue < 1) newValue = 1; // Không cho phép số lượng nhỏ hơn 1

        // Hiển thị giá trị mới
        quantityDisplay.textContent = newValue;

        // Gọi Ajax để cập nhật số lượng trên server
        updateQuantity(idSpec, newValue);
    }

       function updateQuantity(idSpec, quantity) {
        console.log(idSpec + "ok " + quantity);
           $.ajax({
        url: '/Customer/Cart/UpdateQuantity',
        type: 'POST',
        contentType: 'application/json',
        data: JSON.stringify({
            specId: idSpec,
            quantity: quantity
        }),
        success: function (response) {
            if (response.success) {
                console.log("Cập nhật thành công:", response);
            } else {
                alert(response.message);
            }
        },
        error: function (error) {
            console.error("Lỗi khi cập nhật:", error);
            alert('Không thể cập nhật số lượng, vui lòng thử lại sau.');
        }
    });
    }

</script>





